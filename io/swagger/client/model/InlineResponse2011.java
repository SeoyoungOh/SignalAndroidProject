/**
 * 시그널 서버 API
 * 소프트웨어 마에스트로 과정
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineResponse2011 {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("publisher")
  private Object publisher = null;
  @SerializedName("title")
  private String title = null;
  @SerializedName("content")
  private String content = null;
  @SerializedName("created_time")
  private String createdTime = null;
  @SerializedName("start_time")
  private String startTime = null;
  @SerializedName("end_time")
  private String endTime = null;
  @SerializedName("entry_fee_type")
  private String entryFeeType = null;
  @SerializedName("entry_fee")
  private Integer entryFee = null;
  @SerializedName("entry_due_time")
  private String entryDueTime = null;
  @SerializedName("location")
  private String location = null;
  @SerializedName("maximum_people")
  private String maximumPeople = null;
  @SerializedName("meeting_photo_path")
  private String meetingPhotoPath = null;
  @SerializedName("members")
  private String members = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getPublisher() {
    return publisher;
  }
  public void setPublisher(Object publisher) {
    this.publisher = publisher;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getContent() {
    return content;
  }
  public void setContent(String content) {
    this.content = content;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCreatedTime() {
    return createdTime;
  }
  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getStartTime() {
    return startTime;
  }
  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getEndTime() {
    return endTime;
  }
  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getEntryFeeType() {
    return entryFeeType;
  }
  public void setEntryFeeType(String entryFeeType) {
    this.entryFeeType = entryFeeType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getEntryFee() {
    return entryFee;
  }
  public void setEntryFee(Integer entryFee) {
    this.entryFee = entryFee;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getEntryDueTime() {
    return entryDueTime;
  }
  public void setEntryDueTime(String entryDueTime) {
    this.entryDueTime = entryDueTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLocation() {
    return location;
  }
  public void setLocation(String location) {
    this.location = location;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMaximumPeople() {
    return maximumPeople;
  }
  public void setMaximumPeople(String maximumPeople) {
    this.maximumPeople = maximumPeople;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMeetingPhotoPath() {
    return meetingPhotoPath;
  }
  public void setMeetingPhotoPath(String meetingPhotoPath) {
    this.meetingPhotoPath = meetingPhotoPath;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMembers() {
    return members;
  }
  public void setMembers(String members) {
    this.members = members;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2011 inlineResponse2011 = (InlineResponse2011) o;
    return (this.id == null ? inlineResponse2011.id == null : this.id.equals(inlineResponse2011.id)) &&
        (this.publisher == null ? inlineResponse2011.publisher == null : this.publisher.equals(inlineResponse2011.publisher)) &&
        (this.title == null ? inlineResponse2011.title == null : this.title.equals(inlineResponse2011.title)) &&
        (this.content == null ? inlineResponse2011.content == null : this.content.equals(inlineResponse2011.content)) &&
        (this.createdTime == null ? inlineResponse2011.createdTime == null : this.createdTime.equals(inlineResponse2011.createdTime)) &&
        (this.startTime == null ? inlineResponse2011.startTime == null : this.startTime.equals(inlineResponse2011.startTime)) &&
        (this.endTime == null ? inlineResponse2011.endTime == null : this.endTime.equals(inlineResponse2011.endTime)) &&
        (this.entryFeeType == null ? inlineResponse2011.entryFeeType == null : this.entryFeeType.equals(inlineResponse2011.entryFeeType)) &&
        (this.entryFee == null ? inlineResponse2011.entryFee == null : this.entryFee.equals(inlineResponse2011.entryFee)) &&
        (this.entryDueTime == null ? inlineResponse2011.entryDueTime == null : this.entryDueTime.equals(inlineResponse2011.entryDueTime)) &&
        (this.location == null ? inlineResponse2011.location == null : this.location.equals(inlineResponse2011.location)) &&
        (this.maximumPeople == null ? inlineResponse2011.maximumPeople == null : this.maximumPeople.equals(inlineResponse2011.maximumPeople)) &&
        (this.meetingPhotoPath == null ? inlineResponse2011.meetingPhotoPath == null : this.meetingPhotoPath.equals(inlineResponse2011.meetingPhotoPath)) &&
        (this.members == null ? inlineResponse2011.members == null : this.members.equals(inlineResponse2011.members));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.publisher == null ? 0: this.publisher.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.content == null ? 0: this.content.hashCode());
    result = 31 * result + (this.createdTime == null ? 0: this.createdTime.hashCode());
    result = 31 * result + (this.startTime == null ? 0: this.startTime.hashCode());
    result = 31 * result + (this.endTime == null ? 0: this.endTime.hashCode());
    result = 31 * result + (this.entryFeeType == null ? 0: this.entryFeeType.hashCode());
    result = 31 * result + (this.entryFee == null ? 0: this.entryFee.hashCode());
    result = 31 * result + (this.entryDueTime == null ? 0: this.entryDueTime.hashCode());
    result = 31 * result + (this.location == null ? 0: this.location.hashCode());
    result = 31 * result + (this.maximumPeople == null ? 0: this.maximumPeople.hashCode());
    result = 31 * result + (this.meetingPhotoPath == null ? 0: this.meetingPhotoPath.hashCode());
    result = 31 * result + (this.members == null ? 0: this.members.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2011 {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  publisher: ").append(publisher).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("  content: ").append(content).append("\n");
    sb.append("  createdTime: ").append(createdTime).append("\n");
    sb.append("  startTime: ").append(startTime).append("\n");
    sb.append("  endTime: ").append(endTime).append("\n");
    sb.append("  entryFeeType: ").append(entryFeeType).append("\n");
    sb.append("  entryFee: ").append(entryFee).append("\n");
    sb.append("  entryDueTime: ").append(entryDueTime).append("\n");
    sb.append("  location: ").append(location).append("\n");
    sb.append("  maximumPeople: ").append(maximumPeople).append("\n");
    sb.append("  meetingPhotoPath: ").append(meetingPhotoPath).append("\n");
    sb.append("  members: ").append(members).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
